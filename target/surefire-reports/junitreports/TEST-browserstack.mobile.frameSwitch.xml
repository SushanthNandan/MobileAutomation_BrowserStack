<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="7" hostname="BAN-DEVARAJLW10" name="browserstack.mobile.frameSwitch" tests="8" failures="0" timestamp="08 Jan 2018 11:21:29 GMT" time="3.220" errors="1">
  <testcase name="launchAdbFrameMobile" time="3.220" classname="browserstack.mobile.frameSwitch">
    <error type="org.openqa.selenium.WebDriverException" message="We&#039;re sorry, but we no longer support emulators or simulators. However, you can now run your selenium tests on real iOS and Android devices. Real devices are faster and more stable. Please contact our Sales team by visiting https://www.browserstack.com/contact and creating a query related to Sales. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 2.21 seconds
Build info: version: &#039;3.6.0&#039;, revision: &#039;6fbf3ec767&#039;, time: &#039;2017-09-27T15:28:36.4Z&#039;
System info: host: &#039;BAN-DEVARAJLW10&#039;, ip: &#039;10.150.108.48&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;x86&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_111&#039;
Driver info: driver.version: RemoteWebDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: We're sorry, but we no longer support emulators or simulators. However, you can now run your selenium tests on real iOS and Android devices. Real devices are faster and more stable. Please contact our Sales team by visiting https://www.browserstack.com/contact and creating a query related to Sales. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 2.21 seconds
Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z'
System info: host: 'BAN-DEVARAJLW10', ip: '10.150.108.48', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_111'
Driver info: driver.version: RemoteWebDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53)
	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91)
	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$24(ProtocolHandshake.java:359)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:362)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:217)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:140)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:153)
	at browserstack.mobile.frameSwitch.launchAdbFrameMobile(frameSwitch.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414)
	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </error>
  </testcase> <!-- launchAdbFrameMobile -->
  <testcase name="launchMobileApple" classname="browserstack.mobile.frameSwitch">
    <skipped/>
  </testcase> <!-- launchMobileApple -->
  <testcase name="testFail" classname="browserstack.mobile.frameSwitch">
    <skipped/>
  </testcase> <!-- testFail -->
  <testcase name="launchAdbFrameLocal" classname="browserstack.mobile.frameSwitch">
    <skipped/>
  </testcase> <!-- launchAdbFrameLocal -->
  <testcase name="testPass" classname="browserstack.mobile.frameSwitch">
    <skipped/>
  </testcase> <!-- testPass -->
  <testcase name="launchLocal" classname="browserstack.mobile.frameSwitch">
    <skipped/>
  </testcase> <!-- launchLocal -->
  <testcase name="launchMobileAndroid" classname="browserstack.mobile.frameSwitch">
    <skipped/>
  </testcase> <!-- launchMobileAndroid -->
  <testcase name="test" classname="browserstack.mobile.frameSwitch">
    <skipped/>
  </testcase> <!-- test -->
</testsuite> <!-- browserstack.mobile.frameSwitch -->
